

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//1-1 relationship : User-Profile
//1-n relationship : User-Project
//n-m relationship : User-Post
model User {
  id String @unique @default(uuid()) 
  email String  @unique
  hashedPassword String 
  createdAt DateTime @default(now())
  updateAt DateTime @updatedAt()
  posts PostUser[]
  projects Project[]
  profile Profile?
  @@id([id,email])
}

//1-n relationship : Project-User
// n-m relationship : model-enum Project-Category
model Project {
  id String @unique @default(uuid()) 
  code String  @unique
  nom String 
  createdAt DateTime @default(now())
  updateAt DateTime @updatedAt()

  Category ProjectCategory[]
  userId String
  userEmail String
  user User @relation(fields: [userId, userEmail], references: [id,email])

}

enum Category {
Civil
Industrial
Electric
}

model ProjectCategory {
  projectId String @unique 
  project Project @relation(fields: [projectId],references: [id])
  categery Category
  @@id([projectId,categery])

}

//1-1 relationship : Profile-User
model Profile {
  id String @id @default(uuid())
  firstName String
  lastName String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId String
  userEmail String 
  user User @relation(fields: [userId,userEmail],references: [id,email])
  @@unique([userId,userEmail])
}



//n-m relationship : Post-User
model Post {
  id Int @unique @default(autoincrement())
  title String 
  content String
  users PostUser[]
}

model PostUser {
  userId String
  user User @relation(fields: [userId],references: [id])
  postId Int
  post Post @relation(fields: [postId],references: [id])
  @@id([userId,postId])
  

}